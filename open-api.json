{
  "openapi": "3.0.3",
  "info": {
    "title": "Product lifecycle & security API",
    "description": "Get information and recommendations on your products and versions in use.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.versio.io/gov/1.0"
    }
  ],
  "security": [
    {
      "apiTokenHeader": []
    },
    {
      "apiTokenQuery": []
    }
  ],
  "tags": [
    {
      "name": "Product lifecycle & security API"
    }
  ],
  "paths": {
    "/vendors": {
      "get": {
        "tags": ["Product lifecycle & security API"],
        "summary": "Get a list of vendors",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of vendors."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/vendors/{vendor}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/vendor"
        }
      ],
      "get": {
        "tags": ["Product lifecycle & security API"],
        "summary": "Get details of a vendor",
        "responses": {
          "200": {
            "description": "A vendor."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/vendors/{vendor}/products": {
      "parameters": [
        {
          "$ref": "#/components/parameters/vendor"
        }
      ],
      "get": {
        "tags": ["Product lifecycle & security API"],
        "summary": "Get a list of products from a vendor",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products from a vendor.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pagingObject"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "vendor": {
                                "$ref": "#/components/schemas/vendor"
                              },
                              "product": {
                                "$ref": "#/components/schemas/product"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/vendors/{vendor}/products/{product}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/vendor"
        },
        {
          "$ref": "#/components/parameters/product"
        }
      ],
      "get": {
        "tags": ["Product lifecycle & security API"],
        "summary": "Get details of a product",
        "responses": {
          "200": {
            "description": "A product."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/vendors/{vendor}/products/{product}/versions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/vendor"
        },
        {
          "$ref": "#/components/parameters/product"
        }
      ],
      "get": {
        "tags": ["Product lifecycle & security API"],
        "summary": "Get a list of versions from a product",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/query-governanceRules"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of versions from a product.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pagingObject"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "vendor": {
                                "$ref": "#/components/schemas/vendor"
                              },
                              "product": {
                                "$ref": "#/components/schemas/product"
                              },
                              "version": {
                                "$ref": "#/components/schemas/version"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/vendors/{vendor}/products/{product}/versions/{version}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/vendor"
        },
        {
          "$ref": "#/components/parameters/product"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "get": {
        "tags": ["Product lifecycle & security API"],
        "parameters": [
          {
            "$ref": "#/components/parameters/query-governanceRules"
          }
        ],
        "summary": "Get details of a product version",
        "responses": {
          "200": {
            "description": "A product version."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/products": {
      "parameters": [],
      "get": {
        "tags": ["Product lifecycle & security API"],
        "summary": "Get a list of products",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pagingObject"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "vendor": {
                                "$ref": "#/components/schemas/vendor"
                              },
                              "product": {
                                "$ref": "#/components/schemas/product"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/versions": {
      "parameters": [],
      "post": {
        "summary": "Get details of multible versions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "minProperties": 1,
                "example": {
                  "{vendor}": {
                    "{product}": {
                      "{version}": {}
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Details of multible versions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "{vendor}": {
                      "type": "object",
                      "properties": {
                        "{product}": {
                          "type": "object",
                          "properties": {
                            "{version}": {
                              "$ref": "#/components/schemas/versionDetails"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "UnauthorizedError": {
        "description": "API token is missing.",
        "content": {
          "text/plain": {
            "schema": {
              "type": "string",
              "example": "Unauthorized"
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "API token is invalid or has not the required permissions.",
        "content": {
          "text/plain": {
            "schema": {
              "type": "string",
              "example": "Forbidden"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "The requested ressource was not found.",
        "content": {
          "text/plain": {
            "schema": {
              "type": "string",
              "example": "Not found"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiTokenHeader": {
        "type": "apiKey",
        "in": "header",
        "description": "Example: apiToken 3lWl1bGeL76K02H7OKO9iz:4kMiG7rZh05mfiFeAQYG8c",
        "name": "Authorization"
      },
      "apiTokenQuery": {
        "type": "apiKey",
        "in": "query",
        "description": "Example: 3lWl1bGeL76K02H7OKO9iz:4kMiG7rZh05mfiFeAQYG8c",
        "name": "apiToken"
      }
    },
    "schemas": {
      "vendor": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "example": "Canonical"
      },
      "product": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "example": "Ubuntu"
      },
      "version": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "example": "20.04.3"
      },
      "versionDetails": {
        "type": "object"
      },
      "limit": { "type": "number", "minimum": 1, "maximum": 1000, "example": 10, "default": 10 },
      "offset": { "type": "number", "minimum": 0, "example": 0, "default": 0 },
      "pagingObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "limit": {
            "$ref": "#/components/schemas/limit"
          },
          "offset": {
            "$ref": "#/components/schemas/offset"
          },
          "totalAvailableItems": {
            "type": "number",
            "example": 42
          }
        }
      },
      "governanceRule": {
        "type": "string",
        "example": "isStable",
        "enum": ["isStable", "isLatestRelease", "isLatestReleaseVersion", "isLatestLongTermSupportRelease", "isLongTermSupport", "hasMaintenance", "hasExtendedMaintenance", "hasSupport", "hasExtendedSupport", "noExplicitCves", "noAmbiguousCves", "noImplicitCves"]
      },
      "governanceRules": {
        "type": "array",
        "uniqueItems": true,
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/governanceRule"
        }
      },
      "tag": {
        "type": "string",
        "example": "Database",
        "enum": ["System component", "Operating system", "Database", "Web server", "Application server", "Programming language", "Messaging server", "Device", "Framework", "Application", "Network", "Virtualisation platform", "Agent", "UI framework", "JavaScript library"]
      }
    },
    "parameters": {
      "vendor": {
        "name": "vendor",
        "in": "path",
        "description": "Vendor name.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/vendor"
        }
      },
      "product": {
        "name": "product",
        "in": "path",
        "description": "Product name.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/product"
        }
      },
      "version": {
        "name": "version",
        "in": "path",
        "description": "version.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/version"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Using the limit parameter to limit the number of records.",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/limit"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Using the offset parameter to begin at a specific record and leave out the rows that come before.",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/offset"
        }
      },
      "query-governanceRules": {
        "name": "governanceRules",
        "in": "query",
        "description": "governance rules.",
        "required": false,
        "style": "pipeDelimited",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/governanceRules"
        }
      },
      "query-sort": {
        "name": "sort",
        "in": "query",
        "description": "Sort collection in ascending (+) or descending (-) order",
        "required": false,
        "style": "pipeDelimited",
        "explode": false,
        "schema": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "type": "string",
            "example": "-vendor",
            "enum": ["-vendor", "+vendor", "-product", "+product", "-tag", "+tag"]
          }
        }
      }
    }
  }
}
